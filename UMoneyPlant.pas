{This is a plant class that generates money}
unit UMoneyPlant;

interface

uses UPlant, UNPC;

type
  TMoneyPlant = class(TPlant)
  private
    moneyToRise: Integer;
  public
    constructor Create(name: String; health: Integer; money: Integer; imgURL: String);
    procedure attack(npc: TNPC); override;
    function getMoney(): Integer;
  end;

implementation
{
Initializes a new MoneyPlant
@param name Plant's name
@param health Plant's health
@param money Amount of money generated by MoneyPlant
@param imgURL ImageIcon image URL
}
constructor TMoneyPlant.Create(name: String; health: Integer; money: Integer; imgURL: String);
begin
  inherited Create(name, health, imgURL);
  self.moneyToRise := money;
end;

{
Method is not used
@param npc NPC to be attacked
}
procedure TMoneyPlant.attack(npc: TNPC);
begin
  exit;
end;

{
Return money generated by MoneyPlant
@return int amount of money player gain from one MoneyFlower
}
function TMoneyPlant.getMoney(): Integer;
begin
  Result := moneyToRise;
end;
end.